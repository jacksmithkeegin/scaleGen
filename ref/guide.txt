Here are some computer programs useful in understanding and implementing dissonance-based tunings and timbres. Since I usually program in the language MATLAB, most of these are MATLAB programs, although the dissonance calculating program is also available in Microsoft's version of BASIC. Morgan Thunder has also translated the dissonance measuring program into C, and updated by Prof. Frink while Mauricio Rodriguez has translated it into LISP and endolith has translated it into python -- thanks Morgan, Prof. Frink, Mauricio, and endolith!

To calculate the dissonance of a sound with a given spectrum, use the following program, which should be placed in your MATLAB folder and called dissmeasure.m
The logical structure and the meaning of the variables are discussed in the section How to Calculate Dissonance Curves of the paper Relating Tuning and Timbre, which is available on-line for your browsing pleasure.

function d=dissmeasure(fvec,amp)
%
% given a set of partials in fvec,
% with amplitudes in amp,
% this routine calculates the dissonance
%
Dstar=0.24; S1=0.0207; S2=18.96; C1=5; C2=-5;
A1=-3.51; A2=-5.75; firstpass=1;
N=length(fvec);
[fvec,ind]=sort(fvec);
ams=amp(ind);
D=0;
for i=2:N
Fmin=fvec(1:N-i+1);
S=Dstar./(S1*Fmin+S2);
Fdif=fvec(i:N)-fvec(1:N-i+1);
a=min(ams(i:N),ams(1:N-i+1));
Dnew=a.*(C1*exp(A1*S.*Fdif)+C2*exp(A2*S.*Fdif));
D=D+Dnew*ones(size(Dnew))';
end
d=D;
Dissonance curves are made by calling the above function repeatedly. For instance, the following code calculates and plots the dissonance curve for a harmonic spectrum with 7 partials of equal amplitude, as shown in figure 3 of the paper "Relating Tuning and Timbre"

freq=500*[1 2 3 4 5 6 7]; amp=ones(size(freq));
range=2.3; inc=0.01; diss=[0];
%
% call function dissmeasure for each interval
%
for alpha=1+inc:inc:range,
f=[freq alpha*freq];
a=[amp, amp];
d=dissmeasure(f, a);
diss=[diss d];
end
plot(1:inc:range,diss)
A pair of useful MATLAB programs converts from musical ratios into cents, and back again. These are

function cents=rat2cent(ratios)
%
% convert ratios to cents
%
cents=1200/log10(2)*log10(ratio);
function ratios=cent2rat(cents)
%
% convert cents to ratios
%
ratio=10.^((log10(2)/1200)*cents);
which should be named rat2cent.m and cent2rat.m and placed in your MATLAB folder. As usual in MATLAB, the input variables cents and ratios can be scalars or vectors.

For those without access to MATLAB, here is a version of the dissonance measuring program written in BASIC

DIM freq(10),amp(10),g(10),diss(1500)
 
' Variables you must set:
' n=number of frequencies in timbre f
' freq(i) = frequency value of ith partial
' amp(i) = amplitude of ith partial
 
' loop through all intervals from startint to endint
 
dstar=.24: s1=.0207: s2=18.96: c1=5.0: c2=-5.0
a1=-3.51: a2=-5.75: index=-1
PRINT " Interval Dissonance"
startint=1: endint=2.3: inc=.01
FOR alpha=startint TO endint STEP inc
index=index+1: d=0
FOR k=1 TO n
g(k)=alpha*freq(k)
NEXT k
' calculate dissonance between f and alpha*f
FOR i=1 TO n
FOR j=1 TO n
IF g(j)<freq(i) THEN fmin=g(j) ELSE fmin=freq(i)
s=dstar/(s1*fmin+s2): fdif=ABS(g(j)-freq(i))
arg1=a1*s*fdif: arg2=a2*s*fdif
IF arg1<-88 THEN exp1=0 ELSE exp1=EXP(arg1)
IF arg2<-88 THEN exp2=0 ELSE exp2=EXP(arg2)
dnew=MIN(amp(i),amp(j))*(c1*exp1+c2*exp2): d=d+dnew
NEXT j
NEXT i
diss(index)=d
PRINT alpha, d
NEXT alpha

Harmonic Timbres
The points of local consonance for the harmonic timbre with partials at (f, 2f, ... , 7f ) are located at simple integer ratios. The results of the previous section explain this elegantly. Candidate points of local consonance are at intervals a for which fi = a fj. Since the partials are at integer multiples of f, a=n/m for integers n and m between 1 and 7. The principle of local consonance says that the most appropriate scale tones for harmonic timbres are located at such a, and indeed, all the points of local consonance of figure 3 occur at such values. The following table compares intervals in the 12-tet scale, intervals in the just major scale, and minima of a dissonance curve drawn for a timbre with nine harmonic partials.

Notes of the equal tempered musical scale compared to minima of the dissonance curve for a 9 partial harmonic timbre, and compared to the Just Intonation major scale from Wilkinson
Note
Name
12-tet
Interval
Minima of Dissonance Curve

Just

Intervals

 
 C	 1.0	
 1.0

1:1

 unison
 C#	 1.059	 	
16:15

 just semitone
 D	 1.122	
 1.14 (8:7 = sept. maj. 2)

9:8

 just whole tone
 D#	 1.189	
 1.17 (7:6 = sept. min 3)

 	 
 	 	
 1.2 (6:5)

6:5

 just min. 3
 E	 1.26	
 1.25 (5:4)

5:4

 just maj. 3
 F	 1.335	
 1.33 (4:3)

4:3

 just perfect 4
 F#	 1.414	
 1.4 (7:5 = sept. tritone)

45:32

 just tritone
 G	 1.498	
1.5 (3:2)

3:2

 perfect 5
 G#	 1.587	
1.6 (8:5)

8:5

 just min. 6
 A	 1.682	
1.67 (5:3)

5:3

 just maj. 6
 A#	 1.782	
1.75 (7:4 = sept. min. 7)

16:9

 just min. 7
 B	 1.888	
1.8 (9:5 = large just maj. 7)

15:8

 just maj. 7
 C	 2.0	
 2.0

2:1

 octave